name: Go MultiPlat Binary

on:
  push:
    branches:
      - main # Or whatever your main branch is called
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm
          # - goos: windows
          #   goarch: amd64
          # - goos: darwin
          #   goarch: arm
          # - goos: darwin
          #   goarch: amd64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Build
      run: |
        OUTPUT_NAME="k8shc-${{ matrix.goos }}-${{ matrix.goarch }}"
        if [ "${{ matrix.goos }}" = "windows" ]; then
          OUTPUT_NAME="${OUTPUT_NAME}.exe"
        fi
        env GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o bin/${OUTPUT_NAME} .

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: k8shc-${{ matrix.goos }}-${{ matrix.goarch }}
        path: bin/